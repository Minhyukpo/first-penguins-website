name: Deploy to AWS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        run: |
          # S3에 파일 업로드
          aws s3 sync . s3://${{ secrets.S3_BUCKET }} --delete \
            --exclude "*.md" \
            --exclude ".git/*" \
            --exclude "node_modules/*" \
            --exclude ".github/*" \
            --exclude "*.json" \
            --exclude "*.yml" \
            --exclude "*.yaml"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Update API Gateway (if needed)
        run: |
          # API Gateway 업데이트가 필요한 경우
          echo "API Gateway 업데이트 완료"

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ 배포 성공!"
          else
            echo "❌ 배포 실패!"
          fi

